{"ast":null,"code":"var _jsxFileName = \"/home/sadiq/Desktop/coding_challenge/coding_challenge/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //state to store our number\n  const [romanNumeral, setRomanNumeral] = useState(); //function to convert to roman numerals from the number\n\n  function convert_to_roman(number) {\n    let roman_numeral = \"\"; //9 and 4 are corner cases in roman numerals thus we consider it by adding CM, CD, XC, XL, IX and IV\n\n    const dictionary = {\n      M: 1000,\n      CM: 900,\n      D: 500,\n      CD: 400,\n      C: 100,\n      XC: 90,\n      L: 50,\n      XL: 40,\n      X: 10,\n      IX: 9,\n      V: 5,\n      IV: 4,\n      I: 1\n    };\n\n    for (const [key, value] of Object.entries(dictionary)) {\n      while (number >= value) {\n        roman_numeral = roman_numeral + key;\n        number = number - value;\n      }\n    }\n\n    return roman_numeral;\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setRomanNumeral(convert_to_roman(e.target.number.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a Number to convert to Roman Numerals:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"number\",\n          children: \"Enter a Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"number\",\n          name: \"number\",\n          placeholder: \"Enter a number..\",\n          min: 1,\n          max: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), romanNumeral ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: romanNumeral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter numbers to find out the longest common subsequence:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"number\",\n          children: \"Enter a  list of Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"number2\",\n          name: \"number2\",\n          placeholder: \"Enter a number..\",\n          min: 1,\n          max: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), romanNumeral ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: romanNumeral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"STFkFV1xZ7oJknYK3yq2i9WMvIg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","romanNumeral","setRomanNumeral","convert_to_roman","number","roman_numeral","dictionary","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","key","value","Object","entries","onSubmit","e","preventDefault","target"],"sources":["/home/sadiq/Desktop/coding_challenge/coding_challenge/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  //state to store our number\n  const [romanNumeral, setRomanNumeral] = useState();\n\n  //function to convert to roman numerals from the number\n  function convert_to_roman(number) {\n    let roman_numeral = \"\";\n    //9 and 4 are corner cases in roman numerals thus we consider it by adding CM, CD, XC, XL, IX and IV\n    const dictionary = {\n      M: 1000,\n      CM: 900,\n      D: 500,\n      CD: 400,\n      C: 100,\n      XC: 90,\n      L: 50,\n      XL: 40,\n      X: 10,\n      IX: 9,\n      V: 5,\n      IV: 4,\n      I: 1,\n    };\n\n    for (const [key, value] of Object.entries(dictionary)) {\n      while (number >= value) {\n        roman_numeral = roman_numeral + key;\n        number = number - value;\n      }\n    }\n    return roman_numeral;\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setRomanNumeral(convert_to_roman(e.target.number.value));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Enter a Number to convert to Roman Numerals:</p>\n        <form onSubmit={onSubmit}>\n          <label htmlFor=\"number\">Enter a Number:</label>\n          <input\n            type=\"number\"\n            id=\"number\"\n            name=\"number\"\n            placeholder=\"Enter a number..\"\n            min={1}\n            max={100}\n          />\n          <input type=\"submit\" value=\"Convert\" />\n        </form>\n        {romanNumeral ? (\n          <>\n            <div>{romanNumeral}</div>\n          </>\n        ) : (\n          <></>\n        )}\n\n        <p>Enter numbers to find out the longest common subsequence:</p>\n        <form onSubmit={onSubmit}>\n          <label htmlFor=\"number\">Enter a  list of Number:</label>\n          <input\n            type=\"number\"\n            id=\"number2\"\n            name=\"number2\"\n            placeholder=\"Enter a number..\"\n            min={1}\n            max={100}\n          />\n          <input type=\"submit\" value=\"Convert\" />\n        </form>\n        {romanNumeral ? (\n          <>\n            <div>{romanNumeral}</div>\n          </>\n        ) : (\n          <></>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}